
i56300u/milepost-codelet-mibench-consumer-jpeg-c-src-jchuff-codelet-9-1/optIRFiles/66jchuff.codelet__9.o:     file format elf64-x86-64

Sections:
Idx Name          Size      VMA               LMA               File off  Algn
  0 .text         00000167  0000000000000000  0000000000000000  00000040  2**4
                  CONTENTS, ALLOC, LOAD, READONLY, CODE
  1 .comment      000000b2  0000000000000000  0000000000000000  000001a7  2**0
                  CONTENTS, READONLY
  2 .note.GNU-stack 00000000  0000000000000000  0000000000000000  00000259  2**0
                  CONTENTS, READONLY
  3 .eh_frame     00000048  0000000000000000  0000000000000000  00000260  2**3
                  CONTENTS, ALLOC, LOAD, RELOC, READONLY, DATA

Disassembly of section .text:

0000000000000000 <astex_codelet__9>:
   0:	55                   	push   %rbp
   1:	41 57                	push   %r15
   3:	41 56                	push   %r14
   5:	41 55                	push   %r13
   7:	41 54                	push   %r12
   9:	53                   	push   %rbx
   a:	41 ba ff ff ff ff    	mov    $0xffffffff,%r10d
  10:	41 be 00 ca 9a 3b    	mov    $0x3b9aca00,%r14d
  16:	31 ed                	xor    %ebp,%ebp
  18:	eb 0e                	jmp    28 <astex_codelet__9+0x28>
  1a:	90                   	nop
  1b:	90                   	nop
  1c:	90                   	nop
  1d:	90                   	nop
  1e:	90                   	nop
  1f:	90                   	nop
  20:	31 ed                	xor    %ebp,%ebp
  22:	41 be 00 ca 9a 3b    	mov    $0x3b9aca00,%r14d
  28:	48 8b 1c ef          	mov    (%rdi,%rbp,8),%rbx
  2c:	48 85 db             	test   %rbx,%rbx
  2f:	41 0f 94 c3          	sete   %r11b
  33:	4c 39 f3             	cmp    %r14,%rbx
  36:	0f 9f c0             	setg   %al
  39:	44 08 d8             	or     %r11b,%al
  3c:	4c 0f 44 f3          	cmove  %rbx,%r14
  40:	44 0f 44 d5          	cmove  %ebp,%r10d
  44:	48 83 c5 01          	add    $0x1,%rbp
  48:	48 81 fd 01 01 00 00 	cmp    $0x101,%rbp
  4f:	75 d7                	jne    28 <astex_codelet__9+0x28>
  51:	45 89 d3             	mov    %r10d,%r11d
  54:	41 be ff ff ff ff    	mov    $0xffffffff,%r14d
  5a:	45 31 ff             	xor    %r15d,%r15d
  5d:	41 bc 00 ca 9a 3b    	mov    $0x3b9aca00,%r12d
  63:	eb 39                	jmp    9e <astex_codelet__9+0x9e>
  65:	90                   	nop
  66:	90                   	nop
  67:	90                   	nop
  68:	90                   	nop
  69:	90                   	nop
  6a:	90                   	nop
  6b:	90                   	nop
  6c:	90                   	nop
  6d:	90                   	nop
  6e:	90                   	nop
  6f:	90                   	nop
  70:	4e 8b 64 ff 08       	mov    0x8(%rdi,%r15,8),%r12
  75:	4d 85 e4             	test   %r12,%r12
  78:	41 0f 94 c5          	sete   %r13b
  7c:	49 39 dc             	cmp    %rbx,%r12
  7f:	41 0f 9f c7          	setg   %r15b
  83:	4c 39 dd             	cmp    %r11,%rbp
  86:	0f 94 c0             	sete   %al
  89:	44 08 e8             	or     %r13b,%al
  8c:	44 08 f8             	or     %r15b,%al
  8f:	4c 0f 45 e3          	cmovne %rbx,%r12
  93:	44 0f 44 f5          	cmove  %ebp,%r14d
  97:	48 83 c5 01          	add    $0x1,%rbp
  9b:	49 89 ef             	mov    %rbp,%r15
  9e:	4a 8b 1c ff          	mov    (%rdi,%r15,8),%rbx
  a2:	48 85 db             	test   %rbx,%rbx
  a5:	40 0f 94 c5          	sete   %bpl
  a9:	4c 39 e3             	cmp    %r12,%rbx
  ac:	41 0f 9f c5          	setg   %r13b
  b0:	41 08 ed             	or     %bpl,%r13b
  b3:	4d 39 fb             	cmp    %r15,%r11
  b6:	0f 94 c0             	sete   %al
  b9:	44 08 e8             	or     %r13b,%al
  bc:	49 0f 45 dc          	cmovne %r12,%rbx
  c0:	45 0f 44 f7          	cmove  %r15d,%r14d
  c4:	49 8d 6f 01          	lea    0x1(%r15),%rbp
  c8:	48 81 fd 01 01 00 00 	cmp    $0x101,%rbp
  cf:	75 9f                	jne    70 <astex_codelet__9+0x70>
  d1:	45 85 f6             	test   %r14d,%r14d
  d4:	78 7d                	js     153 <astex_codelet__9+0x153>
  d6:	49 63 c6             	movslq %r14d,%rax
  d9:	48 8b 2c c7          	mov    (%rdi,%rax,8),%rbp
  dd:	49 63 da             	movslq %r10d,%rbx
  e0:	48 01 2c df          	add    %rbp,(%rdi,%rbx,8)
  e4:	48 c7 04 c7 00 00 00 	movq   $0x0,(%rdi,%rax,8)
  eb:	00 
  ec:	83 04 9e 01          	addl   $0x1,(%rsi,%rbx,4)
  f0:	8b 2c 9a             	mov    (%rdx,%rbx,4),%ebp
  f3:	85 ed                	test   %ebp,%ebp
  f5:	78 17                	js     10e <astex_codelet__9+0x10e>
  f7:	90                   	nop
  f8:	90                   	nop
  f9:	90                   	nop
  fa:	90                   	nop
  fb:	90                   	nop
  fc:	90                   	nop
  fd:	90                   	nop
  fe:	90                   	nop
  ff:	90                   	nop
 100:	48 63 dd             	movslq %ebp,%rbx
 103:	83 04 9e 01          	addl   $0x1,(%rsi,%rbx,4)
 107:	8b 2c 9a             	mov    (%rdx,%rbx,4),%ebp
 10a:	85 ed                	test   %ebp,%ebp
 10c:	79 f2                	jns    100 <astex_codelet__9+0x100>
 10e:	48 8d 2c 9a          	lea    (%rdx,%rbx,4),%rbp
 112:	44 89 75 00          	mov    %r14d,0x0(%rbp)
 116:	83 04 86 01          	addl   $0x1,(%rsi,%rax,4)
 11a:	8b 1c 82             	mov    (%rdx,%rax,4),%ebx
 11d:	41 ba ff ff ff ff    	mov    $0xffffffff,%r10d
 123:	bd 00 00 00 00       	mov    $0x0,%ebp
 128:	41 be 00 ca 9a 3b    	mov    $0x3b9aca00,%r14d
 12e:	85 db                	test   %ebx,%ebx
 130:	0f 88 f2 fe ff ff    	js     28 <astex_codelet__9+0x28>
 136:	90                   	nop
 137:	90                   	nop
 138:	90                   	nop
 139:	90                   	nop
 13a:	90                   	nop
 13b:	90                   	nop
 13c:	90                   	nop
 13d:	90                   	nop
 13e:	90                   	nop
 13f:	90                   	nop
 140:	48 63 c3             	movslq %ebx,%rax
 143:	83 04 86 01          	addl   $0x1,(%rsi,%rax,4)
 147:	8b 1c 82             	mov    (%rdx,%rax,4),%ebx
 14a:	85 db                	test   %ebx,%ebx
 14c:	79 f2                	jns    140 <astex_codelet__9+0x140>
 14e:	e9 cd fe ff ff       	jmpq   20 <astex_codelet__9+0x20>
 153:	44 89 11             	mov    %r10d,(%rcx)
 156:	45 89 30             	mov    %r14d,(%r8)
 159:	49 89 19             	mov    %rbx,(%r9)
 15c:	5b                   	pop    %rbx
 15d:	41 5c                	pop    %r12
 15f:	41 5d                	pop    %r13
 161:	41 5e                	pop    %r14
 163:	41 5f                	pop    %r15
 165:	5d                   	pop    %rbp
 166:	c3                   	retq   

Disassembly of section .comment:

0000000000000000 <.comment>:
   0:	00 63 6c             	add    %ah,0x6c(%rbx)
   3:	61                   	(bad)  
   4:	6e                   	outsb  %ds:(%rsi),(%dx)
   5:	67 20 76 65          	and    %dh,0x65(%esi)
   9:	72 73                	jb     7e <.comment+0x7e>
   b:	69 6f 6e 20 37 2e 30 	imul   $0x302e3720,0x6e(%rdi),%ebp
  12:	2e 30 20             	xor    %ah,%cs:(%rax)
  15:	28 68 74             	sub    %ch,0x74(%rax)
  18:	74 70                	je     8a <.comment+0x8a>
  1a:	73 3a                	jae    56 <.comment+0x56>
  1c:	2f                   	(bad)  
  1d:	2f                   	(bad)  
  1e:	67 69 74 2e 6c 6c 76 	imul   $0x2e6d766c,0x6c(%esi,%ebp,1),%esi
  25:	6d 2e 
  27:	6f                   	outsl  %ds:(%rsi),(%dx)
  28:	72 67                	jb     91 <.comment+0x91>
  2a:	2f                   	(bad)  
  2b:	67 69 74 2f 63 6c 61 	imul   $0x676e616c,0x63(%edi,%ebp,1),%esi
  32:	6e 67 
  34:	2e 67 69 74 2f 20 61 	imul   $0x65643961,%cs:0x20(%edi,%ebp,1),%esi
  3b:	39 64 65 
  3e:	35 66 36 62 32       	xor    $0x32623666,%eax
  43:	38 39                	cmp    %bh,(%rcx)
  45:	33 31                	xor    (%rcx),%esi
  47:	65 61                	gs (bad) 
  49:	62                   	(bad)  
  4a:	35 39 62 63 61       	xor    $0x61636239,%eax
  4f:	33 63 35             	xor    0x35(%rbx),%esp
  52:	36 36 65 31 33       	ss ss xor %esi,%gs:(%rbx)
  57:	35 31 39 35 63       	xor    $0x63353931,%eax
  5c:	62 32                	(bad)  
  5e:	39 31                	cmp    %esi,(%rcx)
  60:	63 65 29             	movslq 0x29(%rbp),%esp
  63:	20 28                	and    %ch,(%rax)
  65:	68 74 74 70 73       	pushq  $0x73707474
  6a:	3a 2f                	cmp    (%rdi),%ch
  6c:	2f                   	(bad)  
  6d:	67 69 74 2e 6c 6c 76 	imul   $0x2e6d766c,0x6c(%esi,%ebp,1),%esi
  74:	6d 2e 
  76:	6f                   	outsl  %ds:(%rsi),(%dx)
  77:	72 67                	jb     e0 <astex_codelet__9+0xe0>
  79:	2f                   	(bad)  
  7a:	67 69 74 2f 6c 6c 76 	imul   $0x2e6d766c,0x6c(%edi,%ebp,1),%esi
  81:	6d 2e 
  83:	67 69 74 2f 20 66 34 	imul   $0x31663466,0x20(%edi,%ebp,1),%esi
  8a:	66 31 
  8c:	66 30 37             	data16 xor %dh,(%rdi)
  8f:	34 38                	xor    $0x38,%al
  91:	38 35 32 32 35 36    	cmp    %dh,0x36353232(%rip)        # 363532c9 <astex_codelet__9+0x363532c9>
  97:	65 61                	gs (bad) 
  99:	64 37                	fs (bad) 
  9b:	36 64 66 35 31 34    	ss fs xor $0x3431,%ax
  a1:	61                   	(bad)  
  a2:	38 38                	cmp    %bh,(%rax)
  a4:	64 34 64             	fs xor $0x64,%al
  a7:	63 66 39             	movslq 0x39(%rsi),%esp
  aa:	37                   	(bad)  
  ab:	66 34 30             	data16 xor $0x30,%al
  ae:	62                   	.byte 0x62
  af:	63 29                	movslq (%rcx),%ebp
	...

Disassembly of section .eh_frame:

0000000000000000 <.eh_frame>:
   0:	14 00                	adc    $0x0,%al
   2:	00 00                	add    %al,(%rax)
   4:	00 00                	add    %al,(%rax)
   6:	00 00                	add    %al,(%rax)
   8:	01 7a 52             	add    %edi,0x52(%rdx)
   b:	00 01                	add    %al,(%rcx)
   d:	78 10                	js     1f <.eh_frame+0x1f>
   f:	01 1b                	add    %ebx,(%rbx)
  11:	0c 07                	or     $0x7,%al
  13:	08 90 01 00 00 2c    	or     %dl,0x2c000001(%rax)
  19:	00 00                	add    %al,(%rax)
  1b:	00 1c 00             	add    %bl,(%rax,%rax,1)
  1e:	00 00                	add    %al,(%rax)
  20:	00 00                	add    %al,(%rax)
			20: R_X86_64_PC32	.text
  22:	00 00                	add    %al,(%rax)
  24:	67 01 00             	add    %eax,(%eax)
  27:	00 00                	add    %al,(%rax)
  29:	41 0e                	rex.B (bad) 
  2b:	10 42 0e             	adc    %al,0xe(%rdx)
  2e:	18 42 0e             	sbb    %al,0xe(%rdx)
  31:	20 42 0e             	and    %al,0xe(%rdx)
  34:	28 42 0e             	sub    %al,0xe(%rdx)
  37:	30 41 0e             	xor    %al,0xe(%rcx)
  3a:	38 83 07 8c 06 8d    	cmp    %al,-0x72f973f9(%rbx)
  40:	05 8e 04 8f 03       	add    $0x38f048e,%eax
  45:	86 02                	xchg   %al,(%rdx)
	...
